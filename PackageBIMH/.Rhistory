library(PackageBIMH)
setwd("/homes/hadjamar/Desktop/CRAZY_BIMH/")
dyn.load("BIMH_CRAZY_OMP_FULL_PARALLEL.so")
serial_BIMH_CRAZY = function(x_start, p, b) {
ans = .C("serial_block_crazy_IMH", as.double(x_start), as.integer(p),
as.integer(b), as.double(matrix(10, nrow = p, ncol = p +1)),
as.double(matrix(10, nrow = p, ncol = p +1)),
as.double(0), as.double(numeric(b * p + 1)), as.double(numeric(b*p +1)))
return(list(est = ans[[6]],
MC = ans[[7]]))
}
test2<-serial_BIMH_CRAZY(0, 96, 10000)
grid = (-900:900)/100
hist(test2$MC, breaks=5000, freq = F, col = "pink", ylim = c(0, 0.045))
N=10000;
f_N <- function(x) {sum(((exp(-(1:N)*(0.001*x^2)))*((cos((1:N)*x)))^2)/((1:N)^2))}
f_N_2 <- function(x){apply(X=as.matrix(grid),1,FUN=f_N)}
gridy = (-1000:1000)/10
y=apply(X=as.matrix(gridy),1,FUN=f_N)
lines(gridy, y/37.6, type = "l", col = "green", lwd = 1)
y=apply(X=as.matrix(grid),1,FUN=f_N)
plot(x,y,type="l")
x=seq(from=-100, to =100, by=0.1)
plot(x,y,type="l")
y=apply(X=as.matrix(grid),1,FUN=f_N)
f_N_2 <- function(x){apply(X=as.matrix(grid),1,FUN=f_N)}
plot(x,y,type="l")
y=apply(X=as.matrix(x),1,FUN=f_N)
plot(x,y,type="l")
dyn.load("BIMH_CRAZY_OMP_FULL_PARALLEL.so")
test2<-serial_BIMH_CRAZY(0, 96, 10000)
serial_BIMH_CRAZY = function(x_start, p, b) {
ans = .C("serial_block_crazy_IMH", as.double(x_start), as.integer(p),
as.integer(b), as.double(matrix(10, nrow = p, ncol = p +1)),
as.double(matrix(10, nrow = p, ncol = p +1)),
as.double(0), as.double(numeric(b * p + 1)), as.double(numeric(b*p +1)))
return(list(est = ans[[6]],
MC = ans[[7]]))
dyn.load("BIMH_CRAZY_OMP_FULL_PARALLEL.so")
test2<-serial_BIMH_CRAZY(0, 96, 1000)
q
}
serial_BIMH_CRAZY = function(x_start, p, b) {
ans = .C("serial_block_crazy_IMH", as.double(x_start), as.integer(p),
as.integer(b), as.double(matrix(10, nrow = p, ncol = p +1)),
as.double(matrix(10, nrow = p, ncol = p +1)),
as.double(0), as.double(numeric(b * p + 1)), as.double(numeric(b*p +1)))
return(list(est = ans[[6]],
MC = ans[[7]]))
}
dyn.load("BIMH_CRAZY_OMP_FULL_PARALLEL.so")
test2<-serial_BIMH_CRAZY(0, 96, 1000)
dyn.load("BIMH_CRAZY_OMP_FULL_PARALLEL.so")
setwd("/homes/hadjamar/Desktop/CRAZY_BIMH/")
dyn.load("BIMH_CRAZY_OMP_FULL_PARALLEL.so")
test2<-serial_BIMH_CRAZY(0, 96, 1000)
dyn.load("BIMH_CRAZY_OMP_FULL_PARALLEL.so")
test2<-serial_BIMH_CRAZY(0, 96, 1000)
hist(test2$MC, breaks=5000, freq = F, col = "pink", ylim = c(0, 0.045))
hist(test2$MC, breaks=500, freq = F, col = "pink", ylim = c(0, 0.045))
system.time(serial_BIMH_CRAZY(0, 96, 1000))
setwd("/homes/hadjamar/Project_4/Final_versions")
serial_BIMH0= function(x_start, p, b) {
ans = .C("Independence_Sampler", as.integer(p*b), as.double(numeric(p*b)),as.double(numeric(p*b)),
as.double(0.0),as.double(x_start))
return(list(est = ans[[4]],
MC = ans[[2]]))
}
serial_BIMH1= function(x_start, p, b) {
ans = .C("serial_block_IMH", as.double(x_start), as.integer(p),
as.integer(b), as.double(matrix(10, nrow = p, ncol = p +1)),
as.double(matrix(10, nrow = p, ncol = p +1)),
as.double(0), as.double(numeric(b * p + 1)), as.double(numeric(b*p +1)))
return(list(est = ans[[6]],
MC = ans[[7]]))
}
serial_BIMH2 = function(x_start, p, b) {
ans = .C("serial_block_IMH", as.double(x_start), as.integer(p),
as.integer(b), as.double(matrix(0, nrow = p, ncol = b*p +1)),
as.double(matrix(0, nrow = p, ncol = b*p +1)),
as.double(0), as.double(numeric(b * p + 1)), as.double(numeric(b*p +1)))
return(list(est = ans[[6]],
MC = ans[[7]]))
}
serial_BIMH3 = function(x_start, p, b) {
ans = .C("parallel_block_IMH", as.double(x_start), as.integer(p),
as.integer(b), as.double(matrix(0, nrow = p, ncol = b*p +1)),
as.double(matrix(0, nrow = p, ncol = b*p +1)),
as.double(0), as.double(numeric(b * p + 1)), as.double(numeric(b*p +1)))
return(list(est = ans[[6]],
MC = ans[[7]]))
}
test<-function(x0, p, b,serial_BIMH){
time<-system.time(out<-serial_BIMH(x0, p, b))
grid = (-900:900)/100
par(mfrow=c(2, 1))
hist(out$MC, breaks=100, freq = F, col = "pink", main = "", xlab = "")
#lines(grid, 0.3*dnorm(grid) + 0.7*dnorm(grid, 5), col = "blue", lwd = 3)
plot(1:length(out$MC), cumsum(out$MC)/(1:length(out$MC)),
type = "l", lwd = 1)
abline(h = 3.5, col = "grey", lwd = 1, lty = 3)
est<-out$est
return(list("estimate"=est,"system.time"=time))
#return(est)
}
setwd("/homes/hadjamar/Project_4/Final_versions")
dyn.load("independence_sampler.so")
test(0,1,10000,serial_BIMH0)
setwd("/homes/hadjamar/Project_4/Final_versions")
dyn.load("BIMH_OMP_FULL_PARALLEL_1TH.so")
test(0,100, 1000, serial_BIMH1)
dyn.load("BIMH_OMP_FULL_PARALLEL.so")
test(0,100, 1000, serial_BIMH1)
dyn.load("BIMH_parallel_proposals.so")
test(0,100, 1000, serial_BIMH3)
test(0,100, 1000, serial_BIMH3)
dyn.load("independence_sampler.so")
test(0,1,10000,serial_BIMH0)
dyn.load("BIMH_forR.so")
test(0,100, 1000, serial_BIMH2)
